---
title: "Week 15: Masters of Your Own Destiny"
author: "Dr. T. Kody Frey"
institute: "Assistant Professor | School of Information Science" 
format:
  revealjs:
    theme: [default]
    slide-number: true
    preview-links: auto
    logo: images/UK.png
    footer: <tkfr222@uky.edu> | [@TKFrey](https://twitter.com/TKFrey) | [tkodyfrey.github.io](https://tkodyfrey.github.io)
    scrollable: true
    transition: fade
    navigation-mode: vertical
    fig-cap-location: bottom
    editor: visual
self-contained: true
editor_options: 
  chunk_output_type: inline
---

# Housekeeping

## Overview

-   Housekeeping
-   Getting Data from Qualtrics
-   Spring Cleaning!
-   Data Reduction: EFAs
-   Discussion

## Project Timeline {.smaller}

-   Only 2 weeks left! Everyone is approved and all surveys have launched.
-   Group should be working on *front end* (literature review, hypotheses, methods)
-   Final Report must include:
    -   APA format
    -   Introduction, Rationalize, Lit Review, RQs/Hs, Methods, Results, Discussion (Implications, Limitations, Future Research), Conclusion, References, Any Relevant Appendices
-   Final Conference-Style Presentation must include:
    -   Visual aid
    -   15 minute max
    -   Each member should speak
    -   Brief Q&A at the end

## Help Sessions This Week

![](images/help1.png){fig-align="center"}

## What's Next?

![](images/week.png){fig-align="center"}

## Where we're at

::: panel-tabset
### Team Winchester House

N = 151

::: {layout-ncol="3"}
![](images/xsmall-10.jpeg){fig-align="left"}

![](images/xsmall-15.jpeg){fig-align="left"}

![](images/xsmall-4.jpeg){fig-align="left"}
:::

### Team HealthComm

N = 190

::: {layout-ncol="2"}
![](images/xsmall-3.jpeg){fig-align="left"}

![](images/xsmall-9.jpeg){fig-align="left"}
:::

### Team Sunscreen

N = 186

::: {layout-ncol="3"}
![](images/xsmall.jpeg){fig-align="left"}

![](images/xsmall-2.jpeg){fig-align="left"}

![](images/xsmall-7.jpeg){fig-align="left"}
:::

### Team Boys

N = 182

::: {layout-ncol="3"}
![](images/xsmall-6.jpeg){fig-align="left"}

![](images/xsmall-12.jpeg){fig-align="left"}

![](images/xsmall-14.jpeg){fig-align="left"}
:::

### Team Shake and Bake

N = 173

::: {layout-ncol="4"}
![](images/xsmall-13.jpeg){fig-align="left"}

![](images/xsmall-11.jpeg){fig-align="left"}

![](images/xsmall-8.jpeg){fig-align="left"}

![](images/xsmall-5.jpeg){fig-align="left"}
:::
:::

## Your Task?

-   Download and clean your data
-   Run your EFA
-   Run your tests (time permitting)

# Downloading your data from Qualtrics

## Data & Analysis

![](images/qual1.png){fig-align="center"}

## Export & Import

![](images/qual2.png){fig-align="center"}

## Export Data

![](images/qual3.png){fig-align="center"}

## Download SPSS File

![](images/qual4.png){fig-align="center"}

## Experimental Conditions

![](images/qual5.png){fig-align="center"}

# Running Your EFA

## What is an EFA?

![](images/sort.jpeg){fig-align="center"}

## Step 1: Get Packages

Install necessary necessary packages:

```{r}
#| echo: true
#| eval: false

install.packages('foreign')
install.packages('psych')
install.packages('corrplot')
install.packages('ggplot2')
```

## Step 2: Load 'Em Up

```{r}
#| echo: true

library(foreign)
library(psych)
library(corrplot)
library(ggplot2)
```

## Step 3: Pull In Your Data Using Foreign

```{r}
#| echo: true
#| eval: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)

describe(DATA)

CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))
```

## Step 4: Correlation Matrix

::: panel-tabset
### Create

```{r}
#| echo: true
#| eval: false

round(cor(CogLearning, use="complete.obs"),2)
cor_matrix_cog <- round(cor(CogLearning, use="complete.obs"),2)
```

### Plot

```{r}
#| echo: false
#| eval: true
#| output: false
#| code-fold: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)

describe(DATA)

CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))
```

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

## Plots correlations in order
corrplot(cor(CogLearning, use="complete.obs"), order = "original", tl.col='black', tl.cex=.75) 
```

### Cluster

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

## Groups correlations by clusters
corrplot(cor(CogLearning, use="complete.obs"), order = "hclust", tl.col='black', tl.cex=.75) 
```
:::

## Step 5: Factorability {.smaller}

::: panel-tabset
### Assumptions

```{r}
#| echo: false
#| eval: true
#| output: false
#| code-fold: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)

describe(DATA)

CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))

round(cor(CogLearning, use="complete.obs"),2)
cor_matrix_cog <- round(cor(CogLearning, use="complete.obs"),2)

```

```{r}
#| echo: true
#| eval: true
#| output: asis

## Want values above .60 and significant

cortest.bartlett(CogLearning, n = nrow(CogLearning),diag=TRUE)
KMO(cor_matrix_cog)
```

### Scree Plot

Scree plot helps determine number of factors to extract

Locate the 'elbow' of the plot; where does it begin to flatten?

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

scree(CogLearning)
```

### Parallel Analysis

The PA tests your data against simulated data to determine most likely number of factors

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

parallel=fa.parallel(CogLearning, fm="pa", fa="fa")
sum(parallel$fa.values > 1.0)
sum(parallel$fa.values > .7)
```
:::

------------------------------------------------------------------------

## Step 6: Compare! {.smaller}

Scree and PA will recommend a number of factors. Place this value in 'nfactors=X'

Run model with 'nfactors=X-1' and 'nfactors=X+1' for comparison.

::: panel-tabset
### 1 Factor

```{r}
#| echo: false
#| eval: true
#| output: false
#| code-fold: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)

describe(DATA)

CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))

round(cor(CogLearning, use="complete.obs"),2)
cor_matrix_cog <- round(cor(CogLearning, use="complete.obs"),2)

```

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

CL_1 = fa(CogLearning, nfactors=1, rotate = "oblimin", fm="mle")
print(CL_1, digits = 4)
```

### 2 Factor

```{r}
#| echo: false
#| eval: true
#| output: false
#| code-fold: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)

describe(DATA)

CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))

round(cor(CogLearning, use="complete.obs"),2)
cor_matrix_cog <- round(cor(CogLearning, use="complete.obs"),2)

```

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

CL_2 = fa(CogLearning, nfactors=2, rotate = "oblimin", fm="mle")
print(CL_2, digits = 4)
```

### 3 Factor

```{r}
#| echo: false
#| eval: true
#| output: false
#| code-fold: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)

describe(DATA)

CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))

round(cor(CogLearning, use="complete.obs"),2)
cor_matrix_cog <- round(cor(CogLearning, use="complete.obs"),2)
```

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

CL_3 = fa(CogLearning, nfactors=3, rotate = "oblimin", fm="mle")
print(CL_3, digits = 4)
```
:::

## Important Note

You can change the rotation or factoring method in the code if you want something different:

```{r}
#| echo: true
#| eval: false

## Just an example

CL = fa(CogLearning, nfactors=1, rotate = "promax", fm="fa")
print(CL, digits = 4)
```

## Step 7: Grab the Fit Indices {.smaller}

Kline (2016) and Hu and Bentler (1999): Chi-square goodness-of-fit; Root mean square error of approximation (**RMSEA**) \<.08; Standardized root mean square residual (**SRMR**) \<.08; Tucker--Lewis index (**TLI**) \>.90; Comparative fit index (**CFI**) \>.90.

::: panel-tabset
### Chi-Sq.

Not significant is ideal, but also not super influential

```{r}
#| echo: false
#| eval: true
#| output: false
#| code-fold: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)
CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))
round(cor(CogLearning, use="complete.obs"),2)
cor_matrix_cog <- round(cor(CogLearning, use="complete.obs"),2)
CL_2 = fa(CogLearning, nfactors=2, rotate = "oblimin", fm="mle")
print(CL_2, digits = 4)

```

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

CL_2$STATISTIC
CL_2$dof
```

### CFI

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

1 - ((CL_2$STATISTIC-CL_2$dof)/
       (CL_2$null.chisq-CL_2$null.dof))
```

### Others

Grab TLI, RMSEA and CI, SRMR

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

summary(CL_2, fit.measure=TRUE, standardized=TRUE)
```
:::

## Choosing A Model

Choose the model with the best - or most theoretically appropriate - fit

![](images/EFA.png){fig-align="center"}

## Step 8: An Iterative Process {.smaller}

-   Check individual item **loadings**
-   Items that correlate will start to group (load) together
-   Want \> .4 on one factor but not others
-   Find poorest item, remove it, and run analysis again!

```{r}
#| echo: false
#| eval: true
#| output: false
#| code-fold: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)
CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))
round(cor(CogLearning, use="complete.obs"),2)
cor_matrix_cog <- round(cor(CogLearning, use="complete.obs"),2)
CL_2 = fa(CogLearning, nfactors=2, rotate = "oblimin", fm="mle")
print(CL_2, digits = 4)
```

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

CL_2 = fa(CogLearning[ -c(4)], nfactors=2, rotate = "oblimin", fm="mle")
print(CL_2, digits = 4)
```

## Heads Up!

The '4' in the code represents the items place in the string from Step 3. In this case, it would remove 'V4'.

So, if you want to remove the 6th item, use '\[ -c(6)\]'

This can get confusing if your items are out of order.

```{r}
#| echo: true
#| eval: false

CL_2 = fa(CogLearning[ -c(6)], nfactors=1, rotate = "oblimin", fm="mle")
print(CL_2, digits = 4)
```

## Step 9: Create Factors

How many items loaded together? These are your FACTORS

```{r}
#| echo: false
#| eval: true
#| output: false
#| code-fold: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)
CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))
round(cor(CogLearning, use="complete.obs"),2)
cor_matrix_cog <- round(cor(CogLearning, use="complete.obs"),2)
CL_2 = fa(CogLearning, nfactors=2, rotate = "oblimin", fm="mle")
print(CL_2, digits = 4)
```

```{r}
#| echo: true
#| eval: true

Factor_1 = c(1, 2, 3, 4, 5)
Factor_2 = c(6, 7, 8, 9, 10)
```

## Get Descriptives

::: panel-tabset
### Means

```{r}
#| echo: false
#| eval: true
#| output: false
#| code-fold: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)
CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))
round(cor(CogLearning, use="complete.obs"),2)
cor_matrix_cog <- round(cor(CogLearning, use="complete.obs"),2)
CL_2 = fa(CogLearning, nfactors=2, rotate = "oblimin", fm="mle")
print(CL_2, digits = 4)
```

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

CogLearning$ef1 = apply(CogLearning[ , Factor_1], 1, mean)
CogLearning$ef2 = apply(CogLearning[ , Factor_2], 1, mean)
summary(CogLearning)
```

### Standard Deviation

```{r}
#| echo: false
#| eval: true
#| output: false
#| code-fold: false

DATA <- read.spss("/Users/kodyfrey/Desktop/CI 665/Week 15/SampleData_SpedUp_665_Prepped.sav", use.value.label=FALSE, to.data.frame=TRUE)
CogLearning=na.omit(subset(DATA, select= c(CLearn_1, CLearn_2, CLearn_3, CLearn_4, CLearn_5_R, CLearn_6, CLearn_7_R, CLearn_8_R, CLearn_9, CLearn_10_R)))
round(cor(CogLearning, use="complete.obs"),2)
cor_matrix_cog <- round(cor(CogLearning, use="complete.obs"),2)
CL_2 = fa(CogLearning, nfactors=2, rotate = "oblimin", fm="mle")
print(CL_2, digits = 4)
```

```{r}
#| echo: true
#| eval: true
#| output: true
#| code-fold: true

CogLearning$ef1 = apply(CogLearning[ , Factor_1], 1, mean)
CogLearning$ef2 = apply(CogLearning[ , Factor_2], 1, mean)
sd(CogLearning$ef1)
sd(CogLearning$ef2)
```
:::

## Step 10:

-   Use the compute function to create a new variable in SPSS using the items discovered during FA
-   Compare M and SD for that scale to those obtained here.

# Wrap Up!

## Remember!

Good researchers **support** and **justify** they decisions they made along the way.

## What's Next??

You have successfully put together a quantitative research study. The next step is to present this work to your peers at an academic conference. The content for the final week in the course centers on effective dissemination and presentation of your empirical results. You should leave the day feeling prepared for your final course presentations, as well as any conference presentations you plan to submit to in the future.
